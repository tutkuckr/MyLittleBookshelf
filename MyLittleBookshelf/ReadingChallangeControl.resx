<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="RC_CircleProgressbar1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="label4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        93/Y8A79Vg/+RAAAAABJRU5ErkJggg==
</value>
  </data>
</root>